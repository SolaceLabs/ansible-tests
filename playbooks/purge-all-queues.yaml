- name: purge all queues from pubsubplus service
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  collections:
  - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_queue:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ msg_vpn }}"
    solace.pubsub_plus.solace_get_queues:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ msg_vpn }}"

  tasks:
  - name: Get secrets from file on disk
    ansible.builtin.include_vars:
      file: "{{ secrets_file }}"
    when: secrets_file is defined

  - name: get queue list
    solace_get_queues:
      api: monitor
      username: "{{ broker_secrets[ inventory_hostname ].username }}"
      password: "{{ broker_secrets[ inventory_hostname ].password }}"
      query_params:
#        where:
#        - "queueName==foo*"
        select:
        - "queueName"
    register: queueList

#  - name: delete all queues
  - name: disable queue
    solace_queue:
      name: "{{ queueItem }}"
      username: "{{ broker_secrets[ inventory_hostname ].username }}"
      password: "{{ broker_secrets[ inventory_hostname ].password }}"
      settings:
        ingressDisabled: true
        egressDisabled: true
      state: present
    loop: "{{ queueList }}"
    loop_control:
      loop_var: queueItem

  - name: delete msgs from queue
    ansible.builtin.uri:
      url: "{{ 'https' if sempv2_is_secure_connection else 'http' }}://{{ sempv2_host }}:{{ sempv2_port }}/SEMP/v2/action/msgVpns/{{ msg_vpn }}/queues/{{ queueItem }}/deleteMsgs"
      user: "{{ broker_secrets[ inventory_hostname ].username }}"
      password: "{{ broker_secrets[ inventory_hostname ].password }}"
      method: PUT
#        force_basic_auth: yes
      status_code: 200
    loop: "{{ queueList }}"
    loop_control:
      loop_var: queueItem

  - name: delete queue
    solace_queue:
      name: "{{ queueItem }}"
      username: "{{ broker_secrets[ inventory_hostname ].username }}"
      password: "{{ broker_secrets[ inventory_hostname ].password }}"
      state: absent
    loop: "{{ queueList }}"
    loop_control:
      loop_var: queueItem
