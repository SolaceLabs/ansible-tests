- name: tear down msgvpn configs
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_vpn:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      timeout: "{{ sempv2_timeout }}"
#      msg_vpn: "{{ msg_vpn }}"
    solace.pubsub_plus.solace_get_vpns:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      timeout: "{{ sempv2_timeout }}"
    solace.pubsub_plus.solace_client_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ msg_vpn }}"
    solace.pubsub_plus.solace_cloud_client_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id if broker_type=='solace_cloud' else omit }}"
    solace.pubsub_plus.solace_client_username:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ msg_vpn }}"

  tasks:
    - name: Get secrets from file
      ansible.builtin.include_vars:
        file: "{{ secrets_file }}"
      when: secrets_file is defined

    # - name: get msgVpnConfig from file
    #   ansible.builtin.include_vars:
    #     file: "{{ msgvpn_config_file }}"
    #   when: ( msgVpnConfig is not defined ) and ( msgvpn_config_file is defined )

    - name: get clientProfiles from file
      ansible.builtin.include_vars:
        file: "{{ client_profile_config_file }}"
      when: client_profile_config_file is defined

    - name: get clientUsers from file
      ansible.builtin.include_vars:
        file: "{{ client_user_config_file }}"
      when: ( clientUsers is not defined ) and ( client_user_config_file is defined )

    - name: get solace cloud msg_vpn name
      block:
        - name: get 1 vpn config
          solace_get_vpns:
            username: "{{ broker_secrets[ inventory_hostname ].username }}"
            password: "{{ broker_secrets[ inventory_hostname ].password }}"
          register: result

        - name: get cloud msg_vpn name
          set_fact:
            msg_vpn_name: "{{ result.result_list[0].data.msgVpnName  }}"
            current_settings: "{{ result.result_list[0].data }}"
      when: broker_type == 'solace_cloud'

    - set_fact:
        msg_vpn_name: "{{ msg_vpn }}"
      when: broker_type != 'solace_cloud'

    - name: config client users
      solace_client_username:
        name: "{{ clientUser.clientUsername }}"
        msg_vpn: "{{ msg_vpn_name }}"
        username: "{{ broker_secrets[ inventory_hostname ].username }}"
        password: "{{ broker_secrets[ inventory_hostname ].password }}"
        state: absent
      loop: "{{ clientUsers }}"
      loop_control:
        loop_var: clientUser
      when: clientUsers is defined

    - name: config client profiles for non-cloud brokers
      solace_client_profile:
        name: "{{ clientProfile.clientProfileName }}"
        msg_vpn: "{{ msg_vpn_name }}"
        username: "{{ broker_secrets[ inventory_hostname ].username }}"
        password: "{{ broker_secrets[ inventory_hostname ].password }}"
        state: absent
      loop: "{{ clientProfiles }}"
      loop_control:
        loop_var: clientProfile
      when: (broker_type != 'solace_cloud') and (clientProfiles is defined)

    - name: config client profiles for cloud brokers
      solace_cloud_client_profile:
        name: "{{ clientProfile.clientProfileName }}"
        msg_vpn: "{{ msg_vpn_name }}"
        username: "{{ broker_secrets[ inventory_hostname ].username }}"
        password: "{{ broker_secrets[ inventory_hostname ].password }}"
        solace_cloud_api_token: "{{ broker_secrets[ inventory_hostname ].solace_cloud_api_token }}"
        state: absent
      loop: "{{ clientProfiles }}"
      loop_control:
        loop_var: clientProfile
      when: (broker_type == 'solace_cloud') and (clientProfiles is defined)

    - name: manage vpn for non-cloud brokers
      solace_vpn:
        name: "{{ msg_vpn_name }}"
        username: "{{ broker_secrets[ inventory_hostname ].username }}"
        password: "{{ broker_secrets[ inventory_hostname ].password }}"
        state: absent
      when: broker_type != 'solace_cloud'

    # - name: update vpn settings
    #   solace_vpn:
    #     name: "{{ msg_vpn_name }}"
    #     username: "{{ broker_secrets[ inventory_hostname ].username }}"
    #     password: "{{ broker_secrets[ inventory_hostname ].password }}"
    #     settings: "{{ msgVpnConfig }}"
    #     state: present
    #   when: msgVpnConfig is defined

